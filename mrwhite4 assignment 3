full_name = "Maya White"
student_email = "mrwhite4@aggies.ncat.edu"
hometown = "Silver Spring, MD"
graduation_semester = "Spring 2029"
major = "Computer Engineering"

#Academic Data Organization (list)
current_courses = ["COMP 163", "MATH 131","ENG 100", "GEEN 100", "GEEN 111"]
completed_courses = ["World History", "AP Lit", "Spanish II", "AP Physics", "BC Calculus"]
credit_hours = [3,4,3,3,1]
gpa_history = [4.0, 4.0, 3.8, 3.7]

#Current Information Storage (tuple)
emergency_contact = ("Mom", "Monica White", "704-555-0199")
home_address = ("1304 Caddington Ave", "Silver Spring", "MD", 20905)
instagram_info = ("Instagram", "@mayawhite8", 100)
twitter_info = ("Twitter", "@mayawhite8", 100)
birthday = ("Birthday", 5, 22, 2006)

#Interest Tracking (set)
current_skills = {"TinkerCAD", "Crochet", "Problem solving", "Time management", "Critical thinking"}
skills_to_learn = {"JavaScript", "Python", "Git", "Web design", "Interpersonal Skills"}
career_interest = {"Software development", "Electrical Engineer", "Systems Engineer", "Game development"}
hobbies = {"Gaming", "Crochet", "Reading", "Volleyball", "Music"}
entertainment_backlog = {"Wednesday", "HIM", "Daria", "Dexter", "The Amazing Digital Circus"}

#Organizational Mapping (dictionary)
course_credits = {"COMP 163": 3, "MATH 150": 3, "ENG 101": 3, "HIS 105": 3}
course_professors = {"COMP 163": "Prof. Rhodes", "MATH 150": "Dr. Lee", "ENG 101": "Dr. Martinez", "HIS 105": "Dr. Brown"}
course_rooms = {"COMP 163": "M-Eric 300", "MATH 150": "Marteena 201", "ENG 101": "Crosby 121", "HIS 105": "Crosby 210"}
monthly_budget = {"Food": 100, "Entertainment": 50, "Books": 300, "Transportation": 15}
study_hours_per_subject = {"Programming": 8, "Math": 5, "English": 3, "History": 0}
contact_directory = {"Mom": "704-555-0199", "Roommate": "336-555-7821", "Academic Advisor": "336-334-5000"}

#Required Calulations
total_current_credits = credit_hours[0] + credit_hours[1] + credit_hours[2] + credit_hours[3] + credit_hours[4]
cumulative_gpa = (gpa_history[0] + gpa_history[1] + gpa_history[2] + gpa_history[3] + gpa_history[4])/4
count_of_completed_courses = len(completed_courses)
total_weekly_study_hours = study_hours_per_subject["Programming"] + study_hours_per_subject["Math"] + study_hours_per_subject["English"] + study_hours_per_subject["History"]
academic_load = total_current_credits + total_weekly_study_hours
total_monthly_budget = monthly_budget["Food"] + monthly_budget["Entertainment"] + monthly_budget["Books"] + monthly_budget["Transportation"]
daily_food_budget = round((monthly_budget["Food"] / 30), 2)
annual_budget_projection = total_monthly_budget * 12
study_cost_per_hour = round((monthly_budget["Books"] / total_weekly_study_hours),2)

#Analytics Calulations
total_social_media_followers = instagram_info[2] + twitter_info[2]
skills_count_comparison = len(current_skills)/ len(skills_to_learn)
contact_directory_total = len(contact_directory)
entertainment_backlog_count = len(entertainment_backlog)

print(f"================================================================")
print(f"              PERSONAL ACADEMIC & LIFE PORTFOLIO")
print(f"================================================================")

#Print for Personal Information Storage section
print(f"Student: {full_name} | Email: {student_email}")
print(f"From: {hometown} | Graduating: {graduation_semester}")
print(f"Major: {major}")

#Print for Academic Profile section
print(f"\n=== ACADEMIC PROFILE ===")
print(f"Current Semester: {total_current_credits} credits across {len(course_credits)} courses")
print(f"Cumulative GPA: {cumulative_gpa:.2f}")
print(f"Weekly Study Time: {total_weekly_study_hours} hours")
print(f"Academic Investment: ${study_cost_per_hour} per study hour")
#Current courses
print(f"\nCurrent Courses:")
print(f"{current_courses[0]} - {credit_hours[0]} credits - {course_professors["COMP 163"]} - {course_rooms["COMP 163"]}")
print(f"{current_courses[1]} - {credit_hours[1]} credits - {course_professors["MATH 150"]} - {course_rooms["MATH 150"]}")
print(f"{current_courses[2]} - {credit_hours[2]} credits - {course_professors["ENG 101"]} - {course_rooms["ENG 101"]}")
print(f"{current_courses[3]} - {credit_hours[3]} credits - {course_professors["HIS 105"]} - {course_rooms["HIS 105"]}")

#Print for Personal Development section
print(f"\n=== PERSONAL DEVELOPMENT ===")
print(f"Current Skills: {current_skills}")
print(f"Learning Goals: {skills_to_learn}")
print(f"Career Interests: {career_interest}")
print(f"Skills Currently Have: {len(current_skills)}")
print(f"Skills Want to Learn: {len(skills_to_learn)}")

#Print for Financial Overview section
print(f"\n=== FINANCIAL OVERVIEW ===")
print(f"Monthly Budget: ${total_monthly_budget}")
print(f"Food: ${monthly_budget["Food"]} (${daily_food_budget}/day)")
print(f"Entertainment: ${monthly_budget["Entertainment"]}")
print(f"Books: ${monthly_budget["Books"]}")
print(f"Transportation: ${monthly_budget["Transportation"]}")
print(f"Annual Projection: ${annual_budget_projection}")

#Print for Contact and Connections section
print(f"\n=== CONNECTIONS & CONTACTS ===")
print(f"Emergency Contact: {emergency_contact[1]} ({emergency_contact[0]}) - {emergency_contact[2]}")
print(f"Home Address: {home_address[0]}, {home_address[1]}, {home_address[2]} {home_address[3]}")
print(f"Social Media Presence: {total_social_media_followers} followers across 2 platforms")
print(f"Key Contacts: {len(contact_directory)} people in directory")

#Print for Life Statistics section
print(f"\n=== LIFE STATISTICS ===")
print(f"Total Courses Completed: {len(completed_courses)}")
print(f"Current Academic Load: {academic_load} weekly commitments")
print(f"Entertainment Backlog: {entertainment_backlog_count} items")
print(f"Current Hobbies: {len(hobbies)} activities")
print(f"============================================================================")
